[{"C:\\Users\\aring\\workspace\\csharp\\Fullstack-Capstone\\Monster Tracker\\client\\src\\index.js":"1","C:\\Users\\aring\\workspace\\csharp\\Fullstack-Capstone\\Monster Tracker\\client\\src\\reportWebVitals.js":"2","C:\\Users\\aring\\workspace\\csharp\\Fullstack-Capstone\\Monster Tracker\\client\\src\\App.js":"3","C:\\Users\\aring\\workspace\\csharp\\Fullstack-Capstone\\Monster Tracker\\client\\src\\components\\ApplicationViews.js":"4","C:\\Users\\aring\\workspace\\csharp\\Fullstack-Capstone\\Monster Tracker\\client\\src\\components\\AppHeader.js":"5","C:\\Users\\aring\\workspace\\csharp\\Fullstack-Capstone\\Monster Tracker\\client\\src\\providers\\UserProvider.js":"6","C:\\Users\\aring\\workspace\\csharp\\Fullstack-Capstone\\Monster Tracker\\client\\src\\pages\\Login.js":"7","C:\\Users\\aring\\workspace\\csharp\\Fullstack-Capstone\\Monster Tracker\\client\\src\\pages\\Register.js":"8","C:\\Users\\aring\\workspace\\csharp\\Fullstack-Capstone\\Monster Tracker\\client\\src\\pages\\Home.js":"9","C:\\Users\\aring\\workspace\\csharp\\Fullstack-Capstone\\Monster Tracker\\client\\src\\pages\\Monsters.js":"10","C:\\Users\\aring\\workspace\\csharp\\Fullstack-Capstone\\Monster Tracker\\client\\src\\components\\MonserCard.js":"11","C:\\Users\\aring\\workspace\\csharp\\Fullstack-Capstone\\Monster Tracker\\client\\src\\pages\\MonsterDetails.js":"12"},{"size":695,"mtime":1612215329677,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":717,"mtime":1612212925307,"results":"16","hashOfConfig":"14"},{"size":1371,"mtime":1612382896008,"results":"17","hashOfConfig":"14"},{"size":3112,"mtime":1612280672382,"results":"18","hashOfConfig":"14"},{"size":3203,"mtime":1612232849175,"results":"19","hashOfConfig":"14"},{"size":2657,"mtime":1612298988497,"results":"20","hashOfConfig":"14"},{"size":3912,"mtime":1612233920182,"results":"21","hashOfConfig":"14"},{"size":568,"mtime":1612281141991,"results":"22","hashOfConfig":"14"},{"size":1507,"mtime":1612382398385,"results":"23","hashOfConfig":"14"},{"size":833,"mtime":1612376870280,"results":"24","hashOfConfig":"14"},{"size":1046,"mtime":1612388719780,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1v5itzt",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"40","usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},"C:\\Users\\aring\\workspace\\csharp\\Fullstack-Capstone\\Monster Tracker\\client\\src\\index.js",[],["55","56"],"C:\\Users\\aring\\workspace\\csharp\\Fullstack-Capstone\\Monster Tracker\\client\\src\\reportWebVitals.js",[],"C:\\Users\\aring\\workspace\\csharp\\Fullstack-Capstone\\Monster Tracker\\client\\src\\App.js",[],"C:\\Users\\aring\\workspace\\csharp\\Fullstack-Capstone\\Monster Tracker\\client\\src\\components\\ApplicationViews.js",["57","58","59","60"],"C:\\Users\\aring\\workspace\\csharp\\Fullstack-Capstone\\Monster Tracker\\client\\src\\components\\AppHeader.js",["61"],"﻿import React, { useState, useContext } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { toast } from 'react-toastify';\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    NavbarText\r\n} from 'reactstrap';\r\nimport { UserContext } from '../providers/UserProvider';\r\n\r\nconst AppHeader = () => {\r\n    const { getCurrentUser, logout } = useContext(UserContext);\r\n    const user = getCurrentUser();\r\n    const history = useHistory();\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const toggle = () => setIsOpen(!isOpen);\r\n\r\n    const logoutAndReturn = () => {\r\n        return logout().then(() => {\r\n            toast.dark('You are now logged out');\r\n            history.push('/login');\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Navbar color=\"dark\" dark expand=\"md\">\r\n                <NavbarBrand tag={Link} to=\"/\">\r\n                    <img\r\n                        id=\"header-logo\"\r\n                        src=\"/MonsterTracker.jpg\"\r\n                        width=\"70\"\r\n                        height=\"70\"\r\n                        className=\"mr-1\"\r\n                        alt=\"Monster Tracker Logo\"\r\n                    />\r\n        </NavbarBrand>\r\n                <NavbarToggler onClick={toggle} />\r\n                <Collapse isOpen={isOpen} navbar>\r\n                    <Nav className=\"mr-auto\" navbar>\r\n                        {user ? (\r\n                            <>\r\n                                <NavItem>\r\n                                    <NavLink to=\"/Monsters\" tag={Link}>\r\n                                        <div>All Monsters</div>\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className=\"pointer\" onClick={logoutAndReturn}>\r\n                                        Logout\r\n                  </NavLink>\r\n                                </NavItem>\r\n                            </>\r\n                        ) : (\r\n                                <>\r\n                                    <NavItem>\r\n                                        <NavLink to=\"/login\" tag={Link}>\r\n                                            Login\r\n                                        </NavLink>\r\n                                    </NavItem>\r\n                                    <NavItem>\r\n                                        <NavLink to=\"/register\" tag={Link}>\r\n                                            Register\r\n                                        </NavLink>\r\n                                    </NavItem>\r\n                                </>\r\n                            )}\r\n                    </Nav>\r\n                    {user ? (\r\n                        <NavbarText className=\"d-sm-none d-md-block\">\r\n                            Welcome {user.displayName}\r\n                        </NavbarText>\r\n                    ) : null}\r\n                </Collapse>\r\n            </Navbar>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AppHeader;","C:\\Users\\aring\\workspace\\csharp\\Fullstack-Capstone\\Monster Tracker\\client\\src\\providers\\UserProvider.js",["62"],"﻿import React, { useState, useEffect, createContext } from \"react\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nexport const UserContext = createContext();\r\n\r\nexport function UserProvider(props) {\r\n    const apiUrl = \"/api/user\";\r\n    const [users, setUser] = useState([]);\r\n    const user = localStorage.getItem(\"user\");\r\n    const [isLoggedIn, setIsLoggedIn] = useState(user != null);\r\n    const [isFirebaseReady, setIsFirebaseReady] = useState(false);\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged((u) => {\r\n            setIsFirebaseReady(true);\r\n        });\r\n    }, []);\r\n\r\n    const logIn = (email, pw) => {\r\n        return firebase.auth().signInWithEmailAndPassword(email, pw)\r\n            .then((signInResponse) => getUserProfile(signInResponse.user.uid))\r\n            .then((user) => {\r\n                console.log(user)\r\n                    localStorage.setItem(\"user\", JSON.stringify(user));\r\n                    setIsLoggedIn(true);\r\n                    return user;\r\n            });\r\n    };\r\n\r\n    const logout = () => {\r\n        return firebase.auth().signOut().then(() => {\r\n            localStorage.clear();\r\n            setIsLoggedIn(false);\r\n        });\r\n    };\r\n\r\n    const register = (user, password) => {\r\n        return firebase.auth()\r\n            .createUserWithEmailAndPassword(user.email, password)\r\n            .then((createResponse) =>\r\n                saveUser({ ...user, firebaseId: createResponse.user.uid })\r\n            ).then((savedUser) => {\r\n                localStorage.setItem(\"user\", JSON.stringify(savedUser));\r\n                setIsLoggedIn(true);\r\n                return savedUser;\r\n            });\r\n    };\r\n\r\n    const getToken = () => firebase.auth().currentUser.getIdToken();\r\n\r\n    const getUserProfile = (firebaseUserId) => {\r\n        return getToken().then((token) =>\r\n            fetch(`${apiUrl}/${firebaseUserId}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            }).then((resp) => resp.json())\r\n        );\r\n    };\r\n\r\n    const saveUser = (user) => {\r\n        return getToken().then((token) =>\r\n            fetch(apiUrl, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(user),\r\n            }).then((resp) => resp.json())\r\n        );\r\n    };\r\n\r\n    const getCurrentUser = () => {\r\n        const user = localStorage.getItem(\"user\");\r\n        if (!user) {\r\n            return null;\r\n        }\r\n        return JSON.parse(user);\r\n    };\r\n\r\n    return (\r\n        <UserContext.Provider\r\n            value={{\r\n                isLoggedIn,\r\n                logIn,\r\n                logout,\r\n                register,\r\n                getToken,\r\n                getCurrentUser,\r\n                users,\r\n                setUser\r\n            }}>\r\n            {isFirebaseReady ? (props.children) : (<Spinner className=\"app-spinner dark\" />\r\n            )}\r\n        </UserContext.Provider>\r\n    );\r\n}","C:\\Users\\aring\\workspace\\csharp\\Fullstack-Capstone\\Monster Tracker\\client\\src\\pages\\Login.js",["63"],"C:\\Users\\aring\\workspace\\csharp\\Fullstack-Capstone\\Monster Tracker\\client\\src\\pages\\Register.js",["64"],"﻿import React, { useContext, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Input } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserContext } from \"../providers/UserProvider\";\r\nimport \"./Login.css\";\r\n\r\nconst Register = () => {\r\n    const { register } = useContext(UserContext);\r\n    const [loading, setLoading] = useState(false);\r\n    const [userName, setDisplayName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirm, setConfirm] = useState(\"\");\r\n    const history = useHistory();\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (password !== confirm) {\r\n            toast.error(\"Passwords do not match\");\r\n            return;\r\n        }\r\n        setLoading(true);\r\n        const profile = {\r\n            userName,\r\n            email\r\n        };\r\n        register(profile, password).then((user) => {\r\n            setLoading(false);\r\n            toast.info(`Welcom ${user.displayName}`);\r\n            history.push(\"/\");\r\n        })\r\n            .catch((err) => {\r\n                setLoading(false);\r\n                toast.error(\"Invalid email\");\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className=\"login-form\">\r\n            <form onSubmit={handleSubmit}>\r\n                <h2 className=\"text-center text-light\">User Register</h2>\r\n                <div className=\"form-group\">\r\n                </div>\r\n                <div className=\"center-div\">\r\n                <div className=\"form-group small-div\">\r\n                    <Input\r\n                        onChange={(e) => setDisplayName(e.target.value)}\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"displayName\"\r\n                        placeholder=\"Display Name\"\r\n                        required=\"required\"\r\n                    />\r\n                </div>\r\n                    <div className=\"form-group small-div\">\r\n                    <Input\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        type=\"email\"\r\n                        className=\"form-control\"\r\n                        name=\"email\"\r\n                        placeholder=\"Email\"\r\n                        required=\"required\"\r\n                    />\r\n                </div>\r\n                    <div className=\"form-group small-div\">\r\n                    <Input\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        type=\"password\"\r\n                        className=\"form-control\"\r\n                        name=\"password\"\r\n                        placeholder=\"Password\"\r\n                        required=\"required\"\r\n                    />\r\n                </div>\r\n                    <div className=\"form-group small-div\">\r\n                    <Input\r\n                        onChange={(e) => setConfirm(e.target.value)}\r\n                        type=\"password\"\r\n                        className=\"form-control\"\r\n                        name=\"confirmPassword\"\r\n                        placeholder=\"Confirm Password\"\r\n                        required=\"required\"\r\n                    />\r\n                </div>\r\n                    <div className=\"form-group small-div\">\r\n                    <Button type=\"submit\" block color=\"danger\" disabled={loading}>\r\n                            Sign Up\r\n          </Button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"text-center small text-light\">\r\n                    Already have an account?\r\n          <div>\r\n                        <Link to=\"/login\" className=\"text-light\">Log in here</Link>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Register;","C:\\Users\\aring\\workspace\\csharp\\Fullstack-Capstone\\Monster Tracker\\client\\src\\pages\\Home.js",["65","66","67","68"],"﻿import React, { useEffect, useState, useContext } from \"react\";\r\nimport { UserContext } from \"../providers/UserProvider\";\r\n\r\nconst Home = () => {\r\n    const { getToken } = useContext(UserContext);\r\n\r\n    return (\r\n        <div className=\"contianer-fluid\">\r\n            <div className=\"row\">\r\n                <div className=\"col\">\r\n                    <div>text</div>\r\n                </div>\r\n                <div className=\"col\">\r\n                    <div>text</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        );\r\n}\r\n\r\nexport default Home;","C:\\Users\\aring\\workspace\\csharp\\Fullstack-Capstone\\Monster Tracker\\client\\src\\pages\\Monsters.js",["69","70","71"],"C:\\Users\\aring\\workspace\\csharp\\Fullstack-Capstone\\Monster Tracker\\client\\src\\components\\MonserCard.js",["72","73","74","75"],"C:\\Users\\aring\\workspace\\csharp\\Fullstack-Capstone\\Monster Tracker\\client\\src\\pages\\MonsterDetails.js",["76","77","78"],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":1,"column":1,"nodeType":"85","messageId":"86","fix":"87"},{"ruleId":"88","severity":1,"message":"89","line":2,"column":10,"nodeType":"90","messageId":"91","endLine":2,"endColumn":16},{"ruleId":"88","severity":1,"message":"92","line":5,"column":5,"nodeType":"90","messageId":"91","endLine":5,"endColumn":17},{"ruleId":"88","severity":1,"message":"93","line":15,"column":11,"nodeType":"90","messageId":"91","endLine":15,"endColumn":19},{"ruleId":"83","severity":1,"message":"84","line":1,"column":1,"nodeType":"85","messageId":"86","fix":"94"},{"ruleId":"83","severity":1,"message":"84","line":1,"column":1,"nodeType":"85","messageId":"86","fix":"95"},{"ruleId":"83","severity":1,"message":"84","line":1,"column":1,"nodeType":"85","messageId":"86","fix":"96"},{"ruleId":"83","severity":1,"message":"84","line":1,"column":1,"nodeType":"85","messageId":"86","fix":"97"},{"ruleId":"83","severity":1,"message":"84","line":1,"column":1,"nodeType":"85","messageId":"86","fix":"98"},{"ruleId":"88","severity":1,"message":"99","line":1,"column":17,"nodeType":"90","messageId":"91","endLine":1,"endColumn":26},{"ruleId":"88","severity":1,"message":"100","line":1,"column":28,"nodeType":"90","messageId":"91","endLine":1,"endColumn":36},{"ruleId":"88","severity":1,"message":"101","line":5,"column":13,"nodeType":"90","messageId":"91","endLine":5,"endColumn":21},{"ruleId":"83","severity":1,"message":"84","line":1,"column":1,"nodeType":"85","messageId":"86","fix":"102"},{"ruleId":"88","severity":1,"message":"103","line":6,"column":8,"nodeType":"90","messageId":"91","endLine":6,"endColumn":22},{"ruleId":"104","severity":1,"message":"105","line":25,"column":8,"nodeType":"106","endLine":25,"endColumn":10,"suggestions":"107"},{"ruleId":"83","severity":1,"message":"84","line":1,"column":1,"nodeType":"85","messageId":"86","fix":"108"},{"ruleId":"88","severity":1,"message":"109","line":2,"column":10,"nodeType":"90","messageId":"91","endLine":2,"endColumn":14},{"ruleId":"88","severity":1,"message":"110","line":3,"column":10,"nodeType":"90","messageId":"91","endLine":3,"endColumn":14},{"ruleId":"111","severity":1,"message":"112","line":10,"column":13,"nodeType":"113","endLine":10,"endColumn":83},{"ruleId":"83","severity":1,"message":"84","line":1,"column":1,"nodeType":"85","messageId":"86","fix":"114"},{"ruleId":"104","severity":1,"message":"115","line":22,"column":8,"nodeType":"106","endLine":22,"endColumn":10,"suggestions":"116"},{"ruleId":"117","severity":1,"message":"118","line":27,"column":17,"nodeType":"113","endLine":27,"endColumn":58},"no-native-reassign",["119"],"no-negated-in-lhs",["120"],"unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program","unexpected",{"range":"121","text":"122"},"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'UserProvider' is defined but never used.","'LoggedIn' is assigned a value but never used.",{"range":"123","text":"122"},{"range":"124","text":"122"},{"range":"125","text":"122"},{"range":"126","text":"122"},{"range":"127","text":"122"},"'useEffect' is defined but never used.","'useState' is defined but never used.","'getToken' is assigned a value but never used.",{"range":"128","text":"122"},"'MonsterDetails' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getToken'. Either include it or remove the dependency array.","ArrayExpression",["129"],{"range":"130","text":"122"},"'Link' is defined but never used.","'Card' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",{"range":"131","text":"122"},"React Hook useEffect has missing dependencies: 'getToken' and 'monsterId'. Either include them or remove the dependency array.",["132"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",[-1,0],"",[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],{"desc":"133","fix":"134"},[-1,0],[-1,0],{"desc":"135","fix":"136"},"Update the dependencies array to be: [getToken]",{"range":"137","text":"138"},"Update the dependencies array to be: [getToken, monsterId]",{"range":"139","text":"140"},[851,853],"[getToken]",[802,804],"[getToken, monsterId]"]