[{"C:\\Users\\aring\\workspace\\csharp\\Fullstack-Capstone\\Monster Tracker\\client\\src\\index.js":"1","C:\\Users\\aring\\workspace\\csharp\\Fullstack-Capstone\\Monster Tracker\\client\\src\\reportWebVitals.js":"2","C:\\Users\\aring\\workspace\\csharp\\Fullstack-Capstone\\Monster Tracker\\client\\src\\App.js":"3","C:\\Users\\aring\\workspace\\csharp\\Fullstack-Capstone\\Monster Tracker\\client\\src\\components\\ApplicationViews.js":"4","C:\\Users\\aring\\workspace\\csharp\\Fullstack-Capstone\\Monster Tracker\\client\\src\\components\\AppHeader.js":"5","C:\\Users\\aring\\workspace\\csharp\\Fullstack-Capstone\\Monster Tracker\\client\\src\\providers\\UserProvider.js":"6","C:\\Users\\aring\\workspace\\csharp\\Fullstack-Capstone\\Monster Tracker\\client\\src\\pages\\Login.js":"7","C:\\Users\\aring\\workspace\\csharp\\Fullstack-Capstone\\Monster Tracker\\client\\src\\pages\\Register.js":"8","C:\\Users\\aring\\workspace\\csharp\\Fullstack-Capstone\\Monster Tracker\\client\\src\\pages\\Home.js":"9","C:\\Users\\aring\\workspace\\csharp\\Fullstack-Capstone\\Monster Tracker\\client\\src\\pages\\Monsters.js":"10","C:\\Users\\aring\\workspace\\csharp\\Fullstack-Capstone\\Monster Tracker\\client\\src\\components\\MonserCard.js":"11","C:\\Users\\aring\\workspace\\csharp\\Fullstack-Capstone\\Monster Tracker\\client\\src\\pages\\MonsterDetails.js":"12","C:\\Users\\aring\\workspace\\csharp\\Fullstack-Capstone\\Monster Tracker\\client\\src\\components\\abilitySection.js":"13","C:\\Users\\aring\\workspace\\csharp\\Fullstack-Capstone\\Monster Tracker\\client\\src\\components\\AbilitySection.js":"14","C:\\Users\\aring\\workspace\\csharp\\Fullstack-Capstone\\Monster Tracker\\client\\src\\pages\\NewEncounter.js":"15","C:\\Users\\aring\\workspace\\csharp\\Fullstack-Capstone\\Monster Tracker\\client\\src\\components\\FavoriteMonsters.js":"16","C:\\Users\\aring\\workspace\\csharp\\Fullstack-Capstone\\Monster Tracker\\client\\src\\components\\SavedEncounters.js":"17","C:\\Users\\aring\\workspace\\csharp\\Fullstack-Capstone\\Monster Tracker\\client\\src\\components\\EncounterCard.js":"18","C:\\Users\\aring\\workspace\\csharp\\Fullstack-Capstone\\Monster Tracker\\client\\src\\pages\\EncounterDetails.js":"19","C:\\Users\\aring\\workspace\\csharp\\Fullstack-Capstone\\Monster Tracker\\client\\src\\pages\\EncounterEdit.js":"20"},{"size":695,"mtime":1612215329677,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"22"},{"size":717,"mtime":1612212925307,"results":"24","hashOfConfig":"22"},{"size":1993,"mtime":1612985078518,"results":"25","hashOfConfig":"22"},{"size":3390,"mtime":1612906808859,"results":"26","hashOfConfig":"22"},{"size":3203,"mtime":1612232849175,"results":"27","hashOfConfig":"22"},{"size":2657,"mtime":1612298988497,"results":"28","hashOfConfig":"22"},{"size":3912,"mtime":1612233920182,"results":"29","hashOfConfig":"22"},{"size":712,"mtime":1612996129689,"results":"30","hashOfConfig":"22"},{"size":2301,"mtime":1612891631071,"results":"31","hashOfConfig":"22"},{"size":753,"mtime":1612904452378,"results":"32","hashOfConfig":"22"},{"size":5239,"mtime":1612984446500,"results":"33","hashOfConfig":"22"},{"size":282,"mtime":1612539544766,"results":"34","hashOfConfig":"22"},{"size":282,"mtime":1612539544766,"results":"35","hashOfConfig":"22"},{"size":7757,"mtime":1612978174451,"results":"36","hashOfConfig":"22"},{"size":2212,"mtime":1612994115339,"results":"37","hashOfConfig":"22"},{"size":2268,"mtime":1612985764241,"results":"38","hashOfConfig":"22"},{"size":277,"mtime":1612995947291,"results":"39","hashOfConfig":"22"},{"size":1988,"mtime":1612997065240,"results":"40","hashOfConfig":"22"},{"size":10220,"mtime":1612993351313,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"1v5itzt",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"58","usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"61","usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"66","usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},"C:\\Users\\aring\\workspace\\csharp\\Fullstack-Capstone\\Monster Tracker\\client\\src\\index.js",[],["88","89"],"C:\\Users\\aring\\workspace\\csharp\\Fullstack-Capstone\\Monster Tracker\\client\\src\\reportWebVitals.js",[],"C:\\Users\\aring\\workspace\\csharp\\Fullstack-Capstone\\Monster Tracker\\client\\src\\App.js",[],"C:\\Users\\aring\\workspace\\csharp\\Fullstack-Capstone\\Monster Tracker\\client\\src\\components\\ApplicationViews.js",["90","91","92","93"],"C:\\Users\\aring\\workspace\\csharp\\Fullstack-Capstone\\Monster Tracker\\client\\src\\components\\AppHeader.js",["94"],"C:\\Users\\aring\\workspace\\csharp\\Fullstack-Capstone\\Monster Tracker\\client\\src\\providers\\UserProvider.js",["95"],"ï»¿import React, { useState, useEffect, createContext } from \"react\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nexport const UserContext = createContext();\r\n\r\nexport function UserProvider(props) {\r\n    const apiUrl = \"/api/user\";\r\n    const [users, setUser] = useState([]);\r\n    const user = localStorage.getItem(\"user\");\r\n    const [isLoggedIn, setIsLoggedIn] = useState(user != null);\r\n    const [isFirebaseReady, setIsFirebaseReady] = useState(false);\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged((u) => {\r\n            setIsFirebaseReady(true);\r\n        });\r\n    }, []);\r\n\r\n    const logIn = (email, pw) => {\r\n        return firebase.auth().signInWithEmailAndPassword(email, pw)\r\n            .then((signInResponse) => getUserProfile(signInResponse.user.uid))\r\n            .then((user) => {\r\n                console.log(user)\r\n                    localStorage.setItem(\"user\", JSON.stringify(user));\r\n                    setIsLoggedIn(true);\r\n                    return user;\r\n            });\r\n    };\r\n\r\n    const logout = () => {\r\n        return firebase.auth().signOut().then(() => {\r\n            localStorage.clear();\r\n            setIsLoggedIn(false);\r\n        });\r\n    };\r\n\r\n    const register = (user, password) => {\r\n        return firebase.auth()\r\n            .createUserWithEmailAndPassword(user.email, password)\r\n            .then((createResponse) =>\r\n                saveUser({ ...user, firebaseId: createResponse.user.uid })\r\n            ).then((savedUser) => {\r\n                localStorage.setItem(\"user\", JSON.stringify(savedUser));\r\n                setIsLoggedIn(true);\r\n                return savedUser;\r\n            });\r\n    };\r\n\r\n    const getToken = () => firebase.auth().currentUser.getIdToken();\r\n\r\n    const getUserProfile = (firebaseUserId) => {\r\n        return getToken().then((token) =>\r\n            fetch(`${apiUrl}/${firebaseUserId}`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                },\r\n            }).then((resp) => resp.json())\r\n        );\r\n    };\r\n\r\n    const saveUser = (user) => {\r\n        return getToken().then((token) =>\r\n            fetch(apiUrl, {\r\n                method: \"POST\",\r\n                headers: {\r\n                    Authorization: `Bearer ${token}`,\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(user),\r\n            }).then((resp) => resp.json())\r\n        );\r\n    };\r\n\r\n    const getCurrentUser = () => {\r\n        const user = localStorage.getItem(\"user\");\r\n        if (!user) {\r\n            return null;\r\n        }\r\n        return JSON.parse(user);\r\n    };\r\n\r\n    return (\r\n        <UserContext.Provider\r\n            value={{\r\n                isLoggedIn,\r\n                logIn,\r\n                logout,\r\n                register,\r\n                getToken,\r\n                getCurrentUser,\r\n                users,\r\n                setUser\r\n            }}>\r\n            {isFirebaseReady ? (props.children) : (<Spinner className=\"app-spinner dark\" />\r\n            )}\r\n        </UserContext.Provider>\r\n    );\r\n}","C:\\Users\\aring\\workspace\\csharp\\Fullstack-Capstone\\Monster Tracker\\client\\src\\pages\\Login.js",["96"],"ï»¿import React, { useContext, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Input } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserContext } from \"../providers/UserProvider\";\r\nimport \"./Login.css\"\r\n\r\nconst Login = () => {\r\n    const { logIn } = useContext(UserContext);\r\n    const [loading, setLoading] = useState(false);\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const history = useHistory();\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        logIn(email, password)\r\n            .then((user) => {\r\n                setLoading(false);\r\n                toast.info(`Welcome back ${user.userName}`);\r\n                history.push(\"/\");\r\n            })\r\n            .catch((err) => {\r\n                setLoading(false);\r\n                toast.error(\"Invalid email or password\");\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className=\"login-form\">\r\n            <form onSubmit={handleSubmit}>\r\n                <h2 className=\"text-center text-light\">User Login</h2>\r\n                <div className=\"center-div\">\r\n                <div className=\"form-group small-div\">\r\n                    <Input\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        type=\"email\"\r\n                        className=\"form-control\"\r\n                        name=\"email\"\r\n                        placeholder=\"Email\"\r\n                        required=\"required\"\r\n                    />\r\n                </div>\r\n                <div className=\"form-group small-div\">\r\n                    <Input\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        type=\"password\"\r\n                        className=\"form-control\"\r\n                        name=\"password\"\r\n                        placeholder=\"Password\"\r\n                        required=\"required\"\r\n                    />\r\n                </div>\r\n                <div className=\"form-group small-div\">\r\n                    <Button type=\"submit\" block color=\"danger\" disabled={loading}>\r\n                        Sign in\r\n          </Button>\r\n                    </div>\r\n    </div>\r\n                <div className=\"text-center small text-light\">\r\n                    Don't have an account?\r\n          <div>\r\n                        <Link to=\"/register\" className=\"text-info\">Sign up here</Link>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;","C:\\Users\\aring\\workspace\\csharp\\Fullstack-Capstone\\Monster Tracker\\client\\src\\pages\\Register.js",["97"],"ï»¿import React, { useContext, useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Input } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserContext } from \"../providers/UserProvider\";\r\nimport \"./Login.css\";\r\n\r\nconst Register = () => {\r\n    const { register } = useContext(UserContext);\r\n    const [loading, setLoading] = useState(false);\r\n    const [userName, setDisplayName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [confirm, setConfirm] = useState(\"\");\r\n    const history = useHistory();\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (password !== confirm) {\r\n            toast.error(\"Passwords do not match\");\r\n            return;\r\n        }\r\n        setLoading(true);\r\n        const profile = {\r\n            userName,\r\n            email\r\n        };\r\n        register(profile, password).then((user) => {\r\n            setLoading(false);\r\n            toast.info(`Welcom ${user.displayName}`);\r\n            history.push(\"/\");\r\n        })\r\n            .catch((err) => {\r\n                setLoading(false);\r\n                toast.error(\"Invalid email\");\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className=\"login-form\">\r\n            <form onSubmit={handleSubmit}>\r\n                <h2 className=\"text-center text-light\">User Register</h2>\r\n                <div className=\"form-group\">\r\n                </div>\r\n                <div className=\"center-div\">\r\n                <div className=\"form-group small-div\">\r\n                    <Input\r\n                        onChange={(e) => setDisplayName(e.target.value)}\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"displayName\"\r\n                        placeholder=\"Display Name\"\r\n                        required=\"required\"\r\n                    />\r\n                </div>\r\n                    <div className=\"form-group small-div\">\r\n                    <Input\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        type=\"email\"\r\n                        className=\"form-control\"\r\n                        name=\"email\"\r\n                        placeholder=\"Email\"\r\n                        required=\"required\"\r\n                    />\r\n                </div>\r\n                    <div className=\"form-group small-div\">\r\n                    <Input\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        type=\"password\"\r\n                        className=\"form-control\"\r\n                        name=\"password\"\r\n                        placeholder=\"Password\"\r\n                        required=\"required\"\r\n                    />\r\n                </div>\r\n                    <div className=\"form-group small-div\">\r\n                    <Input\r\n                        onChange={(e) => setConfirm(e.target.value)}\r\n                        type=\"password\"\r\n                        className=\"form-control\"\r\n                        name=\"confirmPassword\"\r\n                        placeholder=\"Confirm Password\"\r\n                        required=\"required\"\r\n                    />\r\n                </div>\r\n                    <div className=\"form-group small-div\">\r\n                    <Button type=\"submit\" block color=\"danger\" disabled={loading}>\r\n                            Sign Up\r\n          </Button>\r\n                    </div>\r\n                </div>\r\n                <div className=\"text-center small text-light\">\r\n                    Already have an account?\r\n          <div>\r\n                        <Link to=\"/login\" className=\"text-light\">Log in here</Link>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Register;","C:\\Users\\aring\\workspace\\csharp\\Fullstack-Capstone\\Monster Tracker\\client\\src\\pages\\Home.js",["98"],"C:\\Users\\aring\\workspace\\csharp\\Fullstack-Capstone\\Monster Tracker\\client\\src\\pages\\Monsters.js",["99","100"],"ï»¿import React, { useState, useContext, useEffect } from \"react\";\r\nimport { UserContext } from \"../providers/UserProvider\";\r\nimport MonsterCard from \"../components/MonserCard\";\r\nimport \"./Monster.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport const Monsters = () => {\r\n    const history = useHistory();\r\n    const apiUrl = \"/api/monster\";\r\n    const { getToken } = useContext(UserContext);\r\n    const [monsters, setMonsters] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getToken().then((token)=>\r\n        fetch(`${apiUrl}`, {\r\n            method: \"GET\",\r\n            headers: {\r\n                Authorization:`Bearer ${token}`,\r\n            },\r\n        })).then((res) => res.json())\r\n            .then((monsters) => {\r\n                setMonsters(monsters);\r\n            });\r\n    }, []);\r\n\r\n    const details=(id)=> {\r\n        const location = {\r\n            pathname: `/MonsterDetails/${id}`,\r\n            state: { prevpath:`/Monsters`}\r\n        }\r\n\r\n        history.push(location)\r\n    }\r\n\r\n    const favorite = (id) => {\r\n        const user = JSON.parse(localStorage.getItem('user'));\r\n        const favorite = {\r\n            userId: user.id,\r\n            monsterId:id\r\n        }\r\n        getToken().then((token) =>\r\n            fetch(\"/api/favorite\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    Authorization:`Bearer ${token}`,\r\n                },\r\n                body: JSON.stringify(favorite),\r\n            })\r\n        )\r\n        toast.success(\"Monster added to favorite\")\r\n\r\n    }\r\n    return (\r\n        <div className=\"Container-fluid\">\r\n            <div className=\"row\">\r\n                {monsters.map((monster) => (\r\n                    <div className=\"col-3 div-background\">\r\n                        <MonsterCard Monster={monster} />\r\n                        <button type=\"button\" className=\"btn btn-info\" onClick={() => { details(monster.id) }}>Details</button>\r\n                        <button type=\"button\" className=\"btn btn-success\" onClick={() => { favorite(monster.id) }}>Add to Favorite</button>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Monsters;","C:\\Users\\aring\\workspace\\csharp\\Fullstack-Capstone\\Monster Tracker\\client\\src\\components\\MonserCard.js",["101","102"],"C:\\Users\\aring\\workspace\\csharp\\Fullstack-Capstone\\Monster Tracker\\client\\src\\pages\\MonsterDetails.js",["103","104","105","106","107","108","109"],"C:\\Users\\aring\\workspace\\csharp\\Fullstack-Capstone\\Monster Tracker\\client\\src\\components\\abilitySection.js",["110","111"],"ï»¿import React from \"react\";\r\n\r\nconst abilitySection = ({ ability, type }) => {\r\n\r\n    return (\r\n        type == null ? (<p>{ability}</p>) :\r\n            (ability.type == type ? (<p>{ability.name}: {ability.description}</p>):(<></>))\r\n    );\r\n};\r\n\r\nexport default abilitySection;","C:\\Users\\aring\\workspace\\csharp\\Fullstack-Capstone\\Monster Tracker\\client\\src\\components\\AbilitySection.js",["112","113"],"C:\\Users\\aring\\workspace\\csharp\\Fullstack-Capstone\\Monster Tracker\\client\\src\\pages\\NewEncounter.js",["114","115","116","117","118","119","120","121"],"C:\\Users\\aring\\workspace\\csharp\\Fullstack-Capstone\\Monster Tracker\\client\\src\\components\\FavoriteMonsters.js",["122","123"],"C:\\Users\\aring\\workspace\\csharp\\Fullstack-Capstone\\Monster Tracker\\client\\src\\components\\SavedEncounters.js",["124","125"],"C:\\Users\\aring\\workspace\\csharp\\Fullstack-Capstone\\Monster Tracker\\client\\src\\components\\EncounterCard.js",["126"],"C:\\Users\\aring\\workspace\\csharp\\Fullstack-Capstone\\Monster Tracker\\client\\src\\pages\\EncounterDetails.js",["127","128","129"],"C:\\Users\\aring\\workspace\\csharp\\Fullstack-Capstone\\Monster Tracker\\client\\src\\pages\\EncounterEdit.js",["130","131","132","133","134","135","136","137","138","139","140","141","142","143"],{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":1,"column":1,"nodeType":"150","messageId":"151","fix":"152"},{"ruleId":"153","severity":1,"message":"154","line":2,"column":10,"nodeType":"155","messageId":"156","endLine":2,"endColumn":16},{"ruleId":"153","severity":1,"message":"157","line":5,"column":5,"nodeType":"155","messageId":"156","endLine":5,"endColumn":17},{"ruleId":"153","severity":1,"message":"158","line":18,"column":11,"nodeType":"155","messageId":"156","endLine":18,"endColumn":19},{"ruleId":"148","severity":1,"message":"149","line":1,"column":1,"nodeType":"150","messageId":"151","fix":"159"},{"ruleId":"148","severity":1,"message":"149","line":1,"column":1,"nodeType":"150","messageId":"151","fix":"160"},{"ruleId":"148","severity":1,"message":"149","line":1,"column":1,"nodeType":"150","messageId":"151","fix":"161"},{"ruleId":"148","severity":1,"message":"149","line":1,"column":1,"nodeType":"150","messageId":"151","fix":"162"},{"ruleId":"148","severity":1,"message":"149","line":1,"column":1,"nodeType":"150","messageId":"151","fix":"163"},{"ruleId":"148","severity":1,"message":"149","line":1,"column":1,"nodeType":"150","messageId":"151","fix":"164"},{"ruleId":"165","severity":1,"message":"166","line":25,"column":8,"nodeType":"167","endLine":25,"endColumn":10,"suggestions":"168"},{"ruleId":"148","severity":1,"message":"149","line":1,"column":1,"nodeType":"150","messageId":"151","fix":"169"},{"ruleId":"170","severity":1,"message":"171","line":7,"column":13,"nodeType":"172","endLine":7,"endColumn":83},{"ruleId":"148","severity":1,"message":"149","line":1,"column":1,"nodeType":"150","messageId":"151","fix":"173"},{"ruleId":"165","severity":1,"message":"174","line":26,"column":8,"nodeType":"167","endLine":26,"endColumn":10,"suggestions":"175"},{"ruleId":"176","severity":1,"message":"177","line":50,"column":33,"nodeType":"178","messageId":"151","endLine":50,"endColumn":35},{"ruleId":"153","severity":1,"message":"179","line":56,"column":11,"nodeType":"155","messageId":"156","endLine":56,"endColumn":23},{"ruleId":"180","severity":1,"message":"181","line":57,"column":27,"nodeType":"182","messageId":"183","endLine":57,"endColumn":38},{"ruleId":"176","severity":1,"message":"177","line":59,"column":30,"nodeType":"178","messageId":"151","endLine":59,"endColumn":32},{"ruleId":"184","severity":1,"message":"185","line":70,"column":25,"nodeType":"172","endLine":70,"endColumn":70},{"ruleId":"148","severity":1,"message":"149","line":1,"column":1,"nodeType":"150","messageId":"151","fix":"186"},{"ruleId":"176","severity":1,"message":"177","line":7,"column":27,"nodeType":"178","messageId":"151","endLine":7,"endColumn":29},{"ruleId":"148","severity":1,"message":"149","line":1,"column":1,"nodeType":"150","messageId":"151","fix":"187"},{"ruleId":"176","severity":1,"message":"177","line":7,"column":27,"nodeType":"178","messageId":"151","endLine":7,"endColumn":29},{"ruleId":"148","severity":1,"message":"149","line":1,"column":1,"nodeType":"150","messageId":"151","fix":"188"},{"ruleId":"165","severity":1,"message":"166","line":31,"column":8,"nodeType":"167","endLine":31,"endColumn":10,"suggestions":"189"},{"ruleId":"165","severity":1,"message":"166","line":45,"column":8,"nodeType":"167","endLine":45,"endColumn":10,"suggestions":"190"},{"ruleId":"180","severity":1,"message":"181","line":62,"column":27,"nodeType":"182","messageId":"183","endLine":62,"endColumn":38},{"ruleId":"176","severity":1,"message":"191","line":64,"column":22,"nodeType":"178","messageId":"151","endLine":64,"endColumn":24},{"ruleId":"176","severity":1,"message":"177","line":173,"column":85,"nodeType":"178","messageId":"151","endLine":173,"endColumn":87},{"ruleId":"176","severity":1,"message":"177","line":173,"column":123,"nodeType":"178","messageId":"151","endLine":173,"endColumn":125},{"ruleId":"176","severity":1,"message":"177","line":173,"column":206,"nodeType":"178","messageId":"151","endLine":173,"endColumn":208},{"ruleId":"148","severity":1,"message":"149","line":1,"column":1,"nodeType":"150","messageId":"151","fix":"192"},{"ruleId":"165","severity":1,"message":"193","line":15,"column":8,"nodeType":"167","endLine":15,"endColumn":10,"suggestions":"194"},{"ruleId":"148","severity":1,"message":"149","line":1,"column":1,"nodeType":"150","messageId":"151","fix":"195"},{"ruleId":"165","severity":1,"message":"196","line":15,"column":8,"nodeType":"167","endLine":15,"endColumn":10,"suggestions":"197"},{"ruleId":"148","severity":1,"message":"149","line":1,"column":1,"nodeType":"150","messageId":"151","fix":"198"},{"ruleId":"148","severity":1,"message":"149","line":1,"column":1,"nodeType":"150","messageId":"151","fix":"199"},{"ruleId":"165","severity":1,"message":"200","line":25,"column":8,"nodeType":"167","endLine":25,"endColumn":10,"suggestions":"201"},{"ruleId":"165","severity":1,"message":"200","line":38,"column":8,"nodeType":"167","endLine":38,"endColumn":10,"suggestions":"202"},{"ruleId":"148","severity":1,"message":"149","line":1,"column":1,"nodeType":"150","messageId":"151","fix":"203"},{"ruleId":"165","severity":1,"message":"166","line":30,"column":8,"nodeType":"167","endLine":30,"endColumn":10,"suggestions":"204"},{"ruleId":"165","severity":1,"message":"166","line":44,"column":8,"nodeType":"167","endLine":44,"endColumn":10,"suggestions":"205"},{"ruleId":"165","severity":1,"message":"200","line":55,"column":8,"nodeType":"167","endLine":55,"endColumn":10,"suggestions":"206"},{"ruleId":"165","severity":1,"message":"200","line":68,"column":8,"nodeType":"167","endLine":68,"endColumn":10,"suggestions":"207"},{"ruleId":"180","severity":1,"message":"181","line":85,"column":27,"nodeType":"182","messageId":"183","endLine":85,"endColumn":38},{"ruleId":"176","severity":1,"message":"191","line":87,"column":23,"nodeType":"178","messageId":"151","endLine":87,"endColumn":25},{"ruleId":"208","severity":1,"message":"209","line":129,"column":58,"nodeType":"210","messageId":"211","endLine":129,"endColumn":60},{"ruleId":"180","severity":1,"message":"181","line":143,"column":27,"nodeType":"182","messageId":"183","endLine":143,"endColumn":38},{"ruleId":"176","severity":1,"message":"191","line":145,"column":23,"nodeType":"178","messageId":"151","endLine":145,"endColumn":25},{"ruleId":"176","severity":1,"message":"177","line":224,"column":84,"nodeType":"178","messageId":"151","endLine":224,"endColumn":86},{"ruleId":"176","severity":1,"message":"177","line":224,"column":122,"nodeType":"178","messageId":"151","endLine":224,"endColumn":124},{"ruleId":"176","severity":1,"message":"177","line":224,"column":206,"nodeType":"178","messageId":"151","endLine":224,"endColumn":208},{"ruleId":"176","severity":1,"message":"177","line":224,"column":242,"nodeType":"178","messageId":"151","endLine":224,"endColumn":244},"no-native-reassign",["212"],"no-negated-in-lhs",["213"],"unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program","unexpected",{"range":"214","text":"215"},"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'UserProvider' is defined but never used.","'LoggedIn' is assigned a value but never used.",{"range":"216","text":"215"},{"range":"217","text":"215"},{"range":"218","text":"215"},{"range":"219","text":"215"},{"range":"220","text":"215"},{"range":"221","text":"215"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getToken'. Either include it or remove the dependency array.","ArrayExpression",["222"],{"range":"223","text":"215"},"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donât need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",{"range":"224","text":"215"},"React Hook useEffect has missing dependencies: 'getToken' and 'monsterId'. Either include them or remove the dependency array.",["225"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","'getAbilities' is assigned a value but never used.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",{"range":"226","text":"215"},{"range":"227","text":"215"},{"range":"228","text":"215"},["229"],["230"],"Expected '!==' and instead saw '!='.",{"range":"231","text":"215"},"React Hook useEffect has a missing dependency: 'getFavorites'. Either include it or remove the dependency array.",["232"],{"range":"233","text":"215"},"React Hook useEffect has a missing dependency: 'getSavedEncounters'. Either include it or remove the dependency array.",["234"],{"range":"235","text":"215"},{"range":"236","text":"215"},"React Hook useEffect has missing dependencies: 'encounterId' and 'getToken'. Either include them or remove the dependency array.",["237"],["238"],{"range":"239","text":"215"},["240"],["241"],["242"],["243"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation",[-1,0],"",[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],[-1,0],{"desc":"244","fix":"245"},[-1,0],[-1,0],{"desc":"246","fix":"247"},[-1,0],[-1,0],[-1,0],{"desc":"244","fix":"248"},{"desc":"244","fix":"249"},[-1,0],{"desc":"250","fix":"251"},[-1,0],{"desc":"252","fix":"253"},[-1,0],[-1,0],{"desc":"254","fix":"255"},{"desc":"254","fix":"256"},[-1,0],{"desc":"244","fix":"257"},{"desc":"244","fix":"258"},{"desc":"254","fix":"259"},{"desc":"254","fix":"260"},"Update the dependencies array to be: [getToken]",{"range":"261","text":"262"},"Update the dependencies array to be: [getToken, monsterId]",{"range":"263","text":"264"},{"range":"265","text":"262"},{"range":"266","text":"262"},"Update the dependencies array to be: [getFavorites]",{"range":"267","text":"268"},"Update the dependencies array to be: [getSavedEncounters]",{"range":"269","text":"270"},"Update the dependencies array to be: [encounterId, getToken]",{"range":"271","text":"272"},{"range":"273","text":"272"},{"range":"274","text":"262"},{"range":"275","text":"262"},{"range":"276","text":"272"},{"range":"277","text":"272"},[844,846],"[getToken]",[989,991],"[getToken, monsterId]",[1125,1127],[1604,1606],[542,544],"[getFavorites]",[550,552],"[getSavedEncounters]",[951,953],"[encounterId, getToken]",[1355,1357],[1292,1294],[1771,1773],[2141,2143],[2575,2577]]